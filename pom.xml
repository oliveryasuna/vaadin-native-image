<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <!--==================================================
  ==== Core
  ==================================================-->

  <groupId>org.vaadin.addons.oliveryasuna</groupId>
  <artifactId>vaadin-native-image</artifactId>
  <version>1.0.0</version>
  <packaging>jar</packaging>

  <modules/>

  <properties>
    <maven.compiler.source>17</maven.compiler.source>
    <maven.compiler.target>17</maven.compiler.target>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <spring.version>3.1.0</spring.version>
    <vaadin.version>24.1.0</vaadin.version>
    <junit.version>5.9.3</junit.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring.version}</version>

        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>com.vaadin</groupId>
        <artifactId>vaadin-bom</artifactId>
        <version>${vaadin.version}</version>

        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>${junit.version}</version>

        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>

      <optional>true</optional>
    </dependency>

    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-core</artifactId>
    </dependency>

    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-spring-boot-starter</artifactId>
    </dependency>

    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-testbench-junit5</artifactId>

      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>

      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>

      <scope>runtime</scope>
    </dependency>
  </dependencies>

  <!--==================================================
  ==== Build
  ==================================================-->

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.graalvm.buildtools</groupId>
          <artifactId>native-maven-plugin</artifactId>
          <version>0.9.23</version>

          <extensions>true</extensions>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <version>${spring.version}</version>

        <configuration>
          <mainClass>com.oliveryasuna.vaadin.example.vni.Application</mainClass>
          <jvmArguments>-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5428</jvmArguments>
          <wait>500</wait>
          <maxAttempts>240</maxAttempts>
        </configuration>
      </plugin>

      <plugin>
        <groupId>com.vaadin</groupId>
        <artifactId>vaadin-maven-plugin</artifactId>
        <version>${vaadin.version}</version>

        <executions>
          <execution>
            <goals>
              <goal>prepare-frontend</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.0.0-M7</version>

        <configuration>
          <failIfNoTests>false</failIfNoTests>
          <trimStackTrace>false</trimStackTrace>
          <enableAssertions>true</enableAssertions>
        </configuration>

        <dependencies>
          <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.version}</version>
          </dependency>
        </dependencies>
      </plugin>
    </plugins>
  </build>

  <reporting/>

  <!--==================================================
  ==== Details
  ==================================================-->

  <name>GraalVM Native Image Example</name>
  <description>An example of a Vaadin application that can be compiled to a native image using GraalVM.</description>
  <url>https://github.com/oliveryasuna/vaadin-native-image</url>
  <inceptionYear>2022</inceptionYear>
  <licenses>
    <license>
      <name>BSD 3-Clause</name>
      <url>https://opensource.org/licenses/BSD-3-Clause</url>
      <comments>Copyright 2023 Oliver Yasuna</comments>
      <distribution>repo</distribution>
    </license>
  </licenses>
  <organization>
    <name>Oliver Yasuna</name>
    <url>https://oliveryasuna.github.io/</url>
  </organization>
  <developers>
    <developer>
      <id>oliver-yasuna</id>

      <name>Oliver Yasuna</name>
      <url>https://oliveryasuna.github.io/</url>

      <timezone>America/New_York</timezone>
    </developer>
  </developers>
  <contributors/>

  <!--==================================================
  ==== Environment
  ==================================================-->

  <issueManagement>
    <system>GitHub</system>
    <url>https://github.com/oliveryasuna/vaadin-jetty-guice/issues</url>
  </issueManagement>
  <ciManagement/>

  <mailingLists/>

  <scm>
    <url>https://github.com/oliveryasuna/vaadin-jetty-guice</url>
    <connection>scm:git:git://github.com/oliveryasuna/vaadin-jetty-guice.git</connection>
    <developerConnection>scm:git:git://github.com/oliveryasuna/vaadin-jetty-guice.git</developerConnection>
  </scm>

  <repositories/>
  <pluginRepositories/>

  <distributionManagement/>

  <profiles>
    <profile>
      <id>production</id>

      <dependencies>
        <dependency>
          <groupId>com.vaadin</groupId>
          <artifactId>vaadin-core</artifactId>

          <exclusions>
            <exclusion>
              <groupId>com.vaadin</groupId>
              <artifactId>vaadin-dev-server</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
      </dependencies>

      <build>
        <plugins>
          <plugin>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-maven-plugin</artifactId>

            <configuration>
              <forceProductionBuild>true</forceProductionBuild>
            </configuration>

            <executions>
              <execution>
                <phase>compile</phase>
                <goals>
                  <goal>build-frontend</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>it</id>

      <build>
        <plugins>
          <plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>

            <executions>
              <execution>
                <id>start-spring-boot</id>

                <phase>pre-integration-test</phase>
                <goals>
                  <goal>start</goal>
                </goals>
              </execution>

              <execution>
                <id>stop-spring-boot</id>

                <phase>post-integration-test</phase>
                <goals>
                  <goal>stop</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>

            <configuration>
              <failIfNoTests>true</failIfNoTests>
              <trimStackTrace>false</trimStackTrace>
              <enableAssertions>true</enableAssertions>
            </configuration>

            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>native</id>

      <dependencies>
        <!-- Remove devtools. -->
        <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-devtools</artifactId>

          <scope>provided</scope>
        </dependency>
      </dependencies>

      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>

            <configuration>
              <archive>
                <manifestEntries>
                  <Spring-Boot-Native-Processed>true</Spring-Boot-Native-Processed>
                </manifestEntries>
              </archive>
            </configuration>
          </plugin>

          <plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>

            <configuration>
              <image>
                <builder>paketobuildpacks/builder:tiny</builder>
                <env>
                  <BP_NATIVE_IMAGE>true</BP_NATIVE_IMAGE>
                </env>
              </image>
              <excludeDevtools>true</excludeDevtools>
            </configuration>

            <executions>
              <execution>
                <id>process-aot</id>

                <goals>
                  <goal>process-aot</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.graalvm.buildtools</groupId>
            <artifactId>native-maven-plugin</artifactId>

            <configuration>
              <classesDirectory>${project.build.outputDirectory}</classesDirectory>
              <metadataRepository>
                <enabled>true</enabled>
              </metadataRepository>
              <requiredVersion>22.3</requiredVersion>
              <buildArgs>
                <buildArg>--initialize-at-build-time=org.apache.commons.logging.LogFactory</buildArg>
              </buildArgs>
            </configuration>

            <executions>
              <execution>
                <id>add-reachability-metadata</id>

                <goals>
                  <goal>add-reachability-metadata</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>nativeTest</id>

      <dependencies>
        <!-- Remove devtools. -->
        <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-devtools</artifactId>

          <scope>provided</scope>
        </dependency>

        <dependency>
          <groupId>org.junit.platform</groupId>
          <artifactId>junit-platform-launcher</artifactId>

          <scope>test</scope>
        </dependency>
      </dependencies>

      <build>
        <plugins>
          <plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>

            <executions>
              <execution>
                <id>process-test-aot</id>

                <goals>
                  <goal>process-test-aot</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.graalvm.buildtools</groupId>
            <artifactId>native-maven-plugin</artifactId>

            <configuration>
              <classesDirectory>${project.build.outputDirectory}</classesDirectory>
              <metadataRepository>
                <enabled>true</enabled>
              </metadataRepository>
              <requiredVersion>22.3</requiredVersion>
              <buildArgs>
                <buildArg>--initialize-at-build-time=org.apache.commons.logging.LogFactory</buildArg>
              </buildArgs>
            </configuration>

            <executions>
              <execution>
                <id>native-test</id>

                <goals>
                  <goal>test</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>vaadin-directory</id>

      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <version>3.2.0</version>

            <configuration>
              <archive>
                <index>true</index>

                <manifest>
                  <addClasspath>false</addClasspath>
                  <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                </manifest>
                <manifestEntries>
                  <Vaadin-Package-Version>1</Vaadin-Package-Version>
                </manifestEntries>
              </archive>

              <excludes>
                <exclude>META-INF/VAADIN/config/flow-build.info.json</exclude>
              </excludes>
            </configuration>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <version>3.2.1</version>

            <executions>
              <execution>
                <id>attach-sources</id>

                <phase>verify</phase>

                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>3.3.0</version>

            <executions>
              <execution>
                <id>attach-javadocs</id>

                <phase>verify</phase>

                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-assembly-plugin</artifactId>
            <version>3.3.0</version>

            <configuration>
              <appendAssemblyId>false</appendAssemblyId>
              <descriptors>
                <descriptor>${project.basedir}/src/assembly/assembly.xml</descriptor>
              </descriptors>
            </configuration>

            <executions>
              <execution>
                <phase>install</phase>

                <goals>
                  <goal>single</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
